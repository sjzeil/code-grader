plugins {
    id 'java'
    id 'application'
	id 'org.hidetake.ssh' version '2.9.0'
    id 'org.unbroken-dome.test-sets' version '4.0.0' 
}

java {
	    sourceCompatibility = JavaVersion.toVersion(11)
	    targetCompatibility = JavaVersion.toVersion(11)
}


application {
    mainModule = 'odu.edu.cs.zeil.codegrader' // name defined in module-info.java
    mainClass = 'odu.edu.cs.zeil.codegrader.cli.RunTests'
}



dependencies {
    implementation project(':code-grader')
    testImplementation 'com.opencsv:opencsv:5.6'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

application {
    mainClassName = 'odu.edu.cs.zeil.codegrader.cli.RunTests'
}

testSets { systest }

tasks.withType(Test) {
	ignoreFailures = true
    useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

check.dependsOn(systest)
systest.dependsOn(jar)


jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes 'Implementation-Title': 'code-grader',
           'Implementation-Version': '1.0',
            'Main-Class': 'edu.odu.cs.zeil.codegrader.cli.RunTests'
    }
//    from { configurations.runtimeClasspath.collect {
//         it.isDirectory() ? it : zipTree(it) } }
    from {
        configurations.runtimeClasspath.findAll {
             it.name.endsWith('jar') /*&& !it.name.contains("poi-ooxml-5") */}
             .collect { zipTree(it) }
             /*
        configurations.runtimeClasspath.findAll {
             it.name.endsWith('jar') && it.name.contains("poi-ooxml-5")}
             .collect { zipTree(it) }
             */
    }
}


// Could this be useful in making IDEs work
// when module-info is in place?
task buildLib (type: Copy) {
    from configurations.testRuntimeClasspath
    into 'lib'
}


if (!project.hasProperty("ivyRepoUser")) {
    ext.ivyRepoUser = "bogus"
}
if (!project.hasProperty("ivyRepoPass")) {
    ext.ivyRepoPass = "bogus"
}


remotes {
  webServer {
    host = 'linux.cs.odu.edu'
    user = "$ivyRepoUser"
    password = "$ivyRepoPass"
  }
}

task copyJar2 (type: Copy) {
    from 'build/libs'
    into 'build/distrib'
    rename { String fileName ->
        fileName.replace("-$project.version", "")
    }
    dependsOn 'jar'
}

task dailyJar (dependsOn: 'copyJar2') {
    description "Deploy the 'daily' build to a fixed URL for downloads."
    group "Distribution"
  doLast {
	def websitePath="/home/zeil/secure_html/gitlab/code-grader/"
    ssh.run {
      session(remotes.webServer) {
       put from: "$buildDir/distrib/code-grader.jar", into: websitePath
      }
    }
  }
}
